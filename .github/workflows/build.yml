name: CMake on multiple platforms

on:
  [workflow_call, workflow_dispatch]


jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest]
        build_type: [Release]
#        c_compiler: [gcc, clang, cl]
        c_compiler: [gcc, clang]
        include:
#          - os: windows-latest
#            c_compiler: cl
#            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: macos-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl
          - os: ubuntu-latest
            c_compiler: clang
          - os: macos-latest
            c_compiler: gcc

    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: '6.7.2'
        target: 'desktop'

    - name: Install libraries and dependencies (ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get install -y libgsl27 libgsl-dev libxml2 libxml2-dev cups libcups2

    - name: Install libraries and dependencies using Homebrew (macos)
      if: matrix.os == 'macos-latest'
      run: |
        sudo brew install gsl libxml2 libomp

    - name: Obtain a copy of QCustomPlot
      run: |
        ./get_qcustomplot.sh

    - name: Checkout JIBAL
      uses: actions/checkout@v4
      with: 
        repository: JYU-IBA/jibal
        path: jibal

    - name: Configure JIBAL
      run: >
        cmake -B ${{ github.workspace }}/build_jibal
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }}/jibal

    - name: Build JIBAL
      run: cmake --build ${{ github.workspace }}/build_jibal --config ${{ matrix.build_type }}
      
    - name: Install JIBAL
      run: sudo cmake --install ${{ github.workspace }}/build_jibal --prefix ${{ github.workspace }}/install

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -DCMAKE_PREFIX_PATH=${{ github.workspace }}/install
        -S ${{ github.workspace }}/qjabs

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Install
      run: sudo cmake --install ${{ steps.strings.outputs.build-output-dir }} --prefix ${{ github.workspace }}/install
#    - name: Test
#      working-directory: ${{ steps.strings.outputs.build-output-dir }}
#      run: ctest --build-config ${{ matrix.build_type }}

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: artifact-${{matrix.os}}
        path: ${{ github.workspace }}/install
